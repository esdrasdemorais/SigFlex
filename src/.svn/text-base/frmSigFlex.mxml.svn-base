<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" 
    xmlns:ns1="*" width="100%"
    xmlns:flexmdi="flexmdi.containers.*" 
    backgroundGradientAlphas="[1.0, 1.0]"
    backgroundGradientColors="[#FFFFFF, #D2D2D2]" 
    backgroundAlpha="50" alpha="1.0"
  	backgroundSize="100%" xmlns:view="com.view.*"
  	creationComplete="init();onCreationComplete();" xmlns:business="com.business.*" xmlns:controls="com.business.controls.*"><!-- xmlns:flexmdi="http://flexmdi.googlecode.com/"-->
    
  	<mx:Script>
        <![CDATA[
        	import mx.events.FlexEvent;
        	import com.view.reports.FlexReportDemo;
        	import com.view.forms.frmComprasControle;
        	import com.view.forms.frmComprasCotacoes;
        	import com.view.forms.frmComprasContratos;
        	import com.view.forms.frmComprasGrade;
        	import com.view.forms.frmComprasControle;
        	import com.view.reports.FlexReportDemo;
        	import com.view.Login;
        	import mx.events.CloseEvent;
        	import mx.managers.PopUpManager;
        	import flexmdi.containers.MDIWindow;
        	import mx.messaging.management.ObjectName;
        	import mx.containers.Form;
            import flexmdi.effects.MDIEffectsDescriptorBase;
            import flexmdi.effects.effectsLib.MDILinearEffects;
            import flexmdi.effects.effectsLib.MDIVistaEffects;
            import mx.controls.Alert;
 
	 		import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
		
 			import com.model.ModelLocator;
		
			[Bindable] public var __model:ModelLocator = ModelLocator.getInstance();
 
		 	/** Initilizes the main menu
			* @param none
			* @return void
			**/
			public function init():void
			{
				var mnuItems:Array = [{label: "Public"}];
				__model.MAINNAV = new ArrayCollection(mnuItems);
				
				this.systemManager.addEventListener(FlexEvent.IDLE, checkInactivity);
			}
			
			/** Handles navigation when a user
			* clicks a button in the main nav bar
			* @param uint – Nav Bar Buttons SelectedIndex
			
			* @return String – returns the lable text associated
			* with the SelectedIndex
			
			**/
			public function handleMainNav(i:uint):void
			{
				switch(__model.MAINNAV.getItemAt(i).label)
				{
					case 'Control Panel':
						__model.workflowState = ModelLocator.CONTROLPANEL;
					break;
					default:
						__model.workflowState = ModelLocator.PUBLIC;
					break;
				}
			}
 
           	// If no activity is detected for 10 seconds reset the
			// user sessionID in the model.
			// Force the user to login in again which will generate a new sessionid.
			public function checkInactivity(e:FlexEvent):void {
			   // Normally this would be set to a longer time span but for demo purposes 10 seconds is fine
			   if(e.currentTarget.mx_internal::idleCounter == 100) {
				    //reset the sessionid variable in the model
				   __model.CURRENTSESSIONID='';
				   // reset the menu bar
				   __model.MAINNAV.removeAll();
				   // we need to add the default option(s) back
				    __model.MAINNAV.addItem("Public");
				    Alert.show("Sorry your session has timed out, please login to continue.");
				    // transfer the user to the login screen
				    __model.workflowState =  ModelLocator.LOGIN;
				   }
			}
 
            private function onCreationComplete():void
            {
                mdiCanvas.effectsLib = flexmdi.effects.effectsLib.MDIVistaEffects;
            }
		 	
            private function adicionarJanela(Form:Object):void
            {
                mdiCanvas.windowManager.add(new Form());
            }
            
            private function closeVisualizarImpressao(event:CloseEvent):void
            {
            	PopUpManager.removePopUp(this);
            }
            
            private function visualizarImpressao(event:MouseEvent):void
            {
            	//this.addChildAt(new FlexReportDemo(), 1);
            	
            	//var janela:FlexReportDemo = new FlexReportDemo();
            	//janela.width  = this.width;
            	//janela.height = this.height;
            	//janela.addEventListener(CloseEvent.CLOSE, closeVisualizarImpressao);
            	
            	//PopUpManager.addPopUp(janela, this, true);
            }
        ]]>
    </mx:Script>
    
    <mx:Canvas x="0" y="0" width="100%" height="100%" backgroundSize="100%" backgroundAlpha="0.45">
        <!--<mx:backgroundImage>@Embed(source='file://///server/Database/fundo5.jpg')</mx:backgroundImage>-->
        <mx:backgroundImage>@Embed(source='images/fundo.png')</mx:backgroundImage>
        <!--<view:Login horizontalCenter="0" verticalCenter="0">
        </view:Login>-->
	</mx:Canvas>
    
    <!-- Cairngorm Mappings -->
	<business:Services id="services" />
	
	<controls:Controller id="controller"/>
	
	<mx:ViewStack id="userViews"
		horizontalCenter="0"
		verticalCenter="0"
		selectedIndex="{__model.workflowState}">
		
		<view:Login/>
		<view:ControlPanel/>
		<view:PublicView />
	
	</mx:ViewStack>
    
    <mx:ApplicationControlBar width="98.5%" height="49" fillAlphas="[1.0, 1.0]" fillColors="[#A3D5DB, #A3D5DB]" alpha="0.6" x="8" y="10">
		
		<mx:Button label="Controle" click="adicionarJanela(frmComprasControle)" enabled="{(__model.CURRENT_USER_ROLE == 'admin') ? true : false}"/>
		<mx:Button label="Cotações" click="adicionarJanela(frmComprasCotacoes)" enabled="{(__model.CURRENT_USER_ROLE == 'admin') ? true : false}"/>
		<mx:Button label="Grade" click="adicionarJanela(frmComprasGrade)" enabled="{(__model.CURRENT_USER_ROLE == 'admin') ? true : false}"/>
		<mx:Button label="Contratos" click="adicionarJanela(frmComprasContratos)" enabled="{(__model.CURRENT_USER_ROLE == 'admin') ? true : false}"/>
		<mx:Button label="Report Demo" click="visualizarImpressao(event)"/>
		<mx:VRule height="30%"/>
		<mx:Label text="Janelas:" color="#FFFFFF" fontWeight="bold"/>
		<mx:Button label="Lado a lado" click="mdiCanvas.windowManager.tile(true, 10)" />
		<mx:Button label="Cascata" click="mdiCanvas.windowManager.cascade()"/>
		
		<!--<mx:MenuBar id="mainNav"
				width="100%" height="100%"
				dataProvider="{__model.MAINNAV}"
				click="handleMainNav(mainNav.selectedIndex);"/>-->
		
	</mx:ApplicationControlBar>
	
	<flexmdi:MDICanvas id="mdiCanvas" bottom="10" top="67" left="10" right="5">
	</flexmdi:MDICanvas>
	
</mx:Application>